{
    # Global options
    email {$EMAIL}
    
    # Security headers
    header /* {
        # Remove server info
        -Server
        
        # Security headers
        Strict-Transport-Security "max-age=63072000; includeSubDomains; preload"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' wss: https:; frame-ancestors 'none';"
        Permissions-Policy "microphone=(), camera=(), geolocation=(), payment=(), usb=(), magnetometer=(), gyroscope=(), fullscreen=(self)"
    }
}

# Main application
{$DOMAIN:localhost} {
    # Rate limiting
    rate_limit {
        zone static_ip_10rs 10r/s 10
        zone static_ip_100rm 100r/m 10
        zone dynamic_ip_5rs 5r/s 100
        zone dynamic_ip_50rm 50r/m 100
    }
    
    # Frontend (React app)
    root * /usr/share/caddy
    file_server
    
    # API routes
    handle_path /api/* {
        reverse_proxy backend:8000 {
            # Health check
            health_uri /health
            health_interval 30s
            
            # Headers
            header_up Host {http.request.host}
            header_up X-Real-IP {http.request.remote.host}
            header_up X-Forwarded-For {http.request.remote.host}
            header_up X-Forwarded-Proto {http.request.scheme}
            
            # Timeouts
            timeout 30s
        }
    }
    
    # SPA fallback
    try_files {path} /index.html
    
    # Security
    encode gzip
    
    # Logging
    log {
        output file /var/log/caddy/access.log {
            roll_size 100MB
            roll_keep 5
            roll_keep_for 720h
        }
        level INFO
        format json
    }
}
