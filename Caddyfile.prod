cat docker/caddy/Caddyfile
{
    email {$CLOUDFLARE_EMAIL}
    acme_ca https://acme-v02.api.letsencrypt.org/directory
    acme_dns cloudflare {$CLOUDFLARE_API_TOKEN}
}

# Nextcloud
{$NEXTCLOUD_DOMAIN} {
    root * /var/www/html
    php_fastcgi nextcloud:9000 {
			env modHeadersAvailable true # Avoid sending the security headers twice
			env front_controller_active true # Enable pretty urls
			
			header_up X-Forwarded-For {remote_host}
		    header_up X-Forwarded-Proto {scheme}
	   		header_up X-Forwarded-Host {host}
		}
    file_server

    # Handle .well-known paths for CardDAV/CalDAV
    redir /.well-known/carddav /remote.php/dav 301
    redir /.well-known/caldav /remote.php/dav 301

    # Increase upload limits
    request_body {
        max_size 10GB
    }

    header {
            X-Content-Type-Options "nosniff"
            X-Robots-Tag "noindex, nofollow"
            X-Frame-Options "SAMEORIGIN"
            X-Permitted-Cross-Domain-Policies "none"
            X-XSS-Protection "1; mode=block"
            Referrer-Policy "no-referrer"
            Strict-Transport-Security "max-age=15552000; includeSubDomains; preload"
        }
}

# Vaultwarden
#{$VAULTWARDEN_DOMAIN} {
#    handle /notifications/hub {
#        reverse_proxy vaultwarden:3012
#    }
#
#    reverse_proxy vaultwarden:80 {
#        header_up Host {host}
#        header_up X-Real-IP {remote_host}
#    }
#}

# Glances
{$GLANCES_DOMAIN} {
    reverse_proxy glances:61208 {
        header_up Host {host}
        header_up X-Real-IP {remote_host}
    }	
    tls {
		dns cloudflare {$CLOUDFLARE_API_TOKEN}
	}
}

# Trading Reports
{$TRADING_REPORT_DOMAIN} {
    reverse_proxy trading-report:8000 {
        header_up Host {host}
        header_up X-Real-IP {remote_host}
    }
}

# Tarot API
{$TAROT_API_DOMAIN} {
    reverse_proxy tarot-api:8000 {
        header_up Host {host}
        header_up X-Real-IP {remote_host}
    }
}

# Resumator Application
{$RESUMATOR_DOMAIN} {
    # API traffic goes to the backend container
    handle_path /api/* {
        reverse_proxy resumator-backend:8000 {
            header_up Host {http.request.host}
        }
    }

    # All other traffic goes to the frontend container
    handle {
        reverse_proxy resumator-frontend:80
    }
}