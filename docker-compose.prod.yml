services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_URL=${VITE_API_URL}
    image: resumator-frontend:${VERSION:-latest}
    container_name: resumator-frontend
    restart: unless-stopped
    networks:
      - homelab_net # Public facing network for Caddy

  db:
    image: postgres:15-alpine
    container_name: resumator-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - resumator_net # Private network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: resumator-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - resumator_net # Private network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    image: resumator-backend:${VERSION:-latest}
    container_name: resumator-backend
    restart: unless-stopped
    environment:
      - ENVIRONMENT=prod
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - JWT_SECRET=${JWT_SECRET}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_MODEL_NAME=${GROQ_MODEL_NAME}
      - ALLOWED_ORIGINS=["https://${RESUMATOR_DOMAIN}"]
    volumes:
      - storage_data:/app/storage
    networks:
      - homelab_net     # Public facing network for Caddy
      - resumator_net   # Private network for DB/Redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    image: resumator-backend:${VERSION:-latest}
    container_name: resumator-worker
    restart: unless-stopped
    entrypoint: /app/entrypoint.worker.prod.sh
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - GROQ_API_KEY=${GROQ_API_KEY}
      - GROQ_MODEL_NAME=${GROQ_MODEL_NAME}
    volumes:
      - storage_data:/app/storage
    command: ["python", "-m", "celery", "-A", "app.worker.celery_app", "worker", "--loglevel=info"]
    networks:
      - resumator_net # Private network only
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
  storage_data:

networks:
  homelab_net:
    external: true
  resumator_net:
    internal: true
