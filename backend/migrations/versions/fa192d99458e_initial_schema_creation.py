"""Initial schema creation

Revision ID: fa192d99458e
Revises: 
Create Date: 2025-10-24 00:33:02.312959

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fa192d99458e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('schema_version')
    op.alter_column('applications', 'resume_id',
               existing_type=sa.INTEGER(),
               comment='Original resume - protected from deletion',
               existing_comment='Original resume - protected from deletion (RESTRICT)',
               existing_nullable=False)
    op.alter_column('applications', 'resume_version_id',
               existing_type=sa.INTEGER(),
               comment='Original resume version - protected from deletion',
               existing_comment='Original resume version - protected from deletion (RESTRICT)',
               existing_nullable=False)
    op.alter_column('applications', 'customized_resume_version_id',
               existing_type=sa.INTEGER(),
               comment='Customized version - deleted with application',
               existing_comment='Customized version for this application - deleted with application (CASCADE)',
               existing_nullable=True)
    op.alter_column('applications', 'cover_letter_id',
               existing_type=sa.INTEGER(),
               comment='Cover letter master record - preserved on deletion (SET NULL)',
               existing_nullable=True)
    op.alter_column('applications', 'cover_letter_version_id',
               existing_type=sa.INTEGER(),
               comment='Specific version of cover letter used for this application - protected from deletion',
               existing_comment='Specific version of cover letter used for this application - preserved on deletion (SET NULL)',
               existing_nullable=True)
    op.alter_column('applications', 'customized_cover_letter_version_id',
               existing_type=sa.INTEGER(),
               comment='Customized cover letter version for this application - deleted with application',
               existing_nullable=True)
    op.alter_column('applications', 'additional_instructions',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Additional instructions used for resume customization',
               existing_nullable=True)
    op.drop_index(op.f('idx_applications_applied_date'), table_name='applications')
    op.drop_index(op.f('idx_applications_company'), table_name='applications')
    op.drop_index(op.f('idx_applications_cover_letter_version_id'), table_name='applications')
    op.drop_index(op.f('idx_applications_customized_resume_version_id'), table_name='applications')
    op.drop_index(op.f('idx_applications_resume_id'), table_name='applications')
    op.drop_index(op.f('idx_applications_resume_version_id'), table_name='applications')
    op.drop_index(op.f('idx_applications_status'), table_name='applications')
    op.drop_index(op.f('idx_applications_user_id'), table_name='applications')
    op.create_index(op.f('ix_applications_applied_date'), 'applications', ['applied_date'], unique=False)
    op.create_index(op.f('ix_applications_company'), 'applications', ['company'], unique=False)
    op.create_index(op.f('ix_applications_cover_letter_id'), 'applications', ['cover_letter_id'], unique=False)
    op.create_index(op.f('ix_applications_cover_letter_version_id'), 'applications', ['cover_letter_version_id'], unique=False)
    op.create_index(op.f('ix_applications_id'), 'applications', ['id'], unique=False)
    op.create_index(op.f('ix_applications_status'), 'applications', ['status'], unique=False)
    op.drop_column('applications', 'cover_letter_customized_at')
    op.alter_column('cover_letter_templates', 'name',
               existing_type=sa.VARCHAR(length=255),
               comment=None,
               existing_comment='Template name for identification',
               existing_nullable=False)
    op.alter_column('cover_letter_templates', 'description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Description of template purpose and use case',
               existing_nullable=True)
    op.alter_column('cover_letter_templates', 'content_template',
               existing_type=sa.TEXT(),
               comment='Template content with placeholders like {position}, {company}, etc.',
               existing_comment='Template content with placeholders for personalization',
               existing_nullable=False)
    op.drop_index(op.f('idx_cover_letter_templates_created_at'), table_name='cover_letter_templates')
    op.drop_index(op.f('idx_cover_letter_templates_name'), table_name='cover_letter_templates')
    op.create_index(op.f('ix_cover_letter_templates_id'), 'cover_letter_templates', ['id'], unique=False)
    op.create_index(op.f('ix_cover_letter_templates_name'), 'cover_letter_templates', ['name'], unique=False)
    op.drop_table_comment(
        'cover_letter_templates',
        existing_comment='Template library for generating cover letters',
        schema=None
    )
    op.alter_column('cover_letter_versions', 'cover_letter_id',
               existing_type=sa.INTEGER(),
               comment='Parent cover letter - cascade delete versions',
               existing_comment='Parent cover letter - cascade delete versions when cover letter deleted',
               existing_nullable=False)
    op.alter_column('cover_letter_versions', 'version',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment='Version identifier (e.g., v1, v1.1, v2 - Company Name)',
               existing_nullable=False)
    op.alter_column('cover_letter_versions', 'markdown_content',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='The actual cover letter content in markdown format',
               existing_nullable=False)
    op.alter_column('cover_letter_versions', 'job_description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Job description used for customization (if this is a customized version)',
               existing_nullable=True)
    op.alter_column('cover_letter_versions', 'is_original',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment='True for original/master versions, False for company-specific customizations',
               existing_nullable=True,
               existing_server_default=sa.text('false'))
    op.drop_index(op.f('idx_cover_letter_versions_cover_letter_id'), table_name='cover_letter_versions')
    op.drop_index(op.f('idx_cover_letter_versions_created_at'), table_name='cover_letter_versions')
    op.drop_index(op.f('idx_cover_letter_versions_is_original'), table_name='cover_letter_versions')
    op.drop_index(op.f('idx_cover_letter_versions_version'), table_name='cover_letter_versions')
    op.create_index(op.f('ix_cover_letter_versions_created_at'), 'cover_letter_versions', ['created_at'], unique=False)
    op.create_index(op.f('ix_cover_letter_versions_id'), 'cover_letter_versions', ['id'], unique=False)
    op.create_index(op.f('ix_cover_letter_versions_is_original'), 'cover_letter_versions', ['is_original'], unique=False)
    op.create_index(op.f('ix_cover_letter_versions_version'), 'cover_letter_versions', ['version'], unique=False)
    op.drop_table_comment(
        'cover_letter_versions',
        existing_comment='Version history for cover letters. Supports customization for applications.',
        schema=None
    )
    op.alter_column('cover_letters', 'user_id',
               existing_type=sa.INTEGER(),
               comment='User who owns this cover letter',
               existing_comment='User who owns this cover letter - cascade delete on user deletion',
               existing_nullable=False)
    op.alter_column('cover_letters', 'is_default',
               existing_type=sa.BOOLEAN(),
               comment=None,
               existing_comment="Whether this is the user's default cover letter",
               existing_nullable=True,
               existing_server_default=sa.text('false'))
    op.drop_index(op.f('idx_cover_letters_created_at'), table_name='cover_letters')
    op.drop_index(op.f('idx_cover_letters_is_default'), table_name='cover_letters')
    op.drop_index(op.f('idx_cover_letters_user_id'), table_name='cover_letters')
    op.create_index(op.f('ix_cover_letters_id'), 'cover_letters', ['id'], unique=False)
    op.create_index(op.f('ix_cover_letters_is_default'), 'cover_letters', ['is_default'], unique=False)
    op.create_index(op.f('ix_cover_letters_user_id'), 'cover_letters', ['user_id'], unique=False)
    op.drop_table_comment(
        'cover_letters',
        existing_comment='Master cover letter records for users. Similar to resumes, can have multiple versions.',
        schema=None
    )
    op.alter_column('resume_versions', 'resume_id',
               existing_type=sa.INTEGER(),
               comment='Parent resume - cascade delete versions',
               existing_nullable=False)
    op.drop_index(op.f('idx_resume_versions_created_at'), table_name='resume_versions')
    op.drop_index(op.f('idx_resume_versions_is_original'), table_name='resume_versions')
    op.drop_index(op.f('idx_resume_versions_resume_id'), table_name='resume_versions')
    op.create_index(op.f('ix_resume_versions_created_at'), 'resume_versions', ['created_at'], unique=False)
    op.create_index(op.f('ix_resume_versions_id'), 'resume_versions', ['id'], unique=False)
    op.create_index(op.f('ix_resume_versions_is_original'), 'resume_versions', ['is_original'], unique=False)
    op.create_index(op.f('ix_resume_versions_version'), 'resume_versions', ['version'], unique=False)
    op.drop_index(op.f('idx_resumes_user_id'), table_name='resumes')
    op.create_index(op.f('ix_resumes_id'), 'resumes', ['id'], unique=False)
    op.drop_index(op.f('idx_users_email'), table_name='users')
    op.drop_index(op.f('idx_users_username'), table_name='users')
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.drop_constraint(op.f('users_username_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # ### end Alembic commands ###
    op.execute("""
INSERT INTO cover_letter_templates (name, description, content_template)
VALUES 
(
    'Professional Standard',
    'A formal, professional cover letter template suitable for most corporate positions',
    'Dear Hiring Manager,

I am writing to express my strong interest in the {position} position at {company}. With my background in {field}, I am confident that I would be a valuable addition to your team.

{highlight_experience}

I am particularly drawn to {company} because {company_interest}. I believe my skills in {key_skills} align well with the requirements outlined in the job description.

{additional_qualifications}

I would welcome the opportunity to discuss how my experience and skills can contribute to {company}''s continued success. Thank you for considering my application.

Sincerely,
{applicant_name}'
),
(
    'Career Change',
    'Template for professionals transitioning to a new industry or role',
    'Dear Hiring Manager,

I am excited to apply for the {position} role at {company}. While my background is in {previous_field}, I have developed transferable skills that make me an excellent candidate for this position.

{transferable_skills}

My decision to transition into {new_field} stems from {motivation}. I have been actively preparing for this change by {preparation_activities}.

{relevant_achievements}

I am enthusiastic about bringing my unique perspective and diverse skill set to {company}. I am confident that my ability to {key_strength} will allow me to make meaningful contributions to your team.

Thank you for considering my application. I look forward to the opportunity to discuss how my background can benefit {company}.

Best regards,
{applicant_name}'
),
(
    'Entry Level',
    'Template for recent graduates or professionals with limited experience',
    'Dear Hiring Manager,

I am writing to apply for the {position} position at {company}. As a recent {degree} graduate from {university}, I am eager to begin my career in {industry} with your organization.

{academic_achievements}

During my studies, I developed strong skills in {key_skills} through {relevant_projects}. Additionally, my {internship_experience} provided me with practical experience in {relevant_areas}.

{enthusiasm_and_motivation}

I am impressed by {company}''s {company_achievement} and would be honored to contribute to your team. My fresh perspective, combined with my willingness to learn and grow, makes me an ideal candidate for this role.

Thank you for considering my application. I am excited about the possibility of starting my career at {company}.

Sincerely,
{applicant_name}'
),
(
    'Technical Role',
    'Template optimized for software engineering and technical positions',
    'Dear Hiring Manager,

I am writing to apply for the {position} role at {company}. With {years_experience} years of experience in {technical_domain}, I am excited about the opportunity to contribute to your engineering team.

{technical_expertise}

My experience includes working with {technologies} and successfully delivering {project_types}. At {previous_company}, I {technical_achievement}, which resulted in {measurable_impact}.

{problem_solving_example}

I am particularly interested in {company}''s work on {company_projects}. I believe my expertise in {specialization} would enable me to make immediate contributions to your team while continuing to grow as an engineer.

{additional_technical_skills}

I would welcome the opportunity to discuss how my technical skills and experience align with your needs. Thank you for your consideration.

Best regards,
{applicant_name}'
),
(
    'Executive/Leadership',
    'Template for senior-level and executive positions',
    'Dear {recipient_title} {recipient_name},

I am writing to express my interest in the {position} role at {company}. With over {years_experience} years of progressive leadership experience in {industry}, I am confident in my ability to drive strategic initiatives and deliver exceptional results for your organization.

{leadership_achievements}

Throughout my career, I have demonstrated success in {key_leadership_areas}. At {current_company}, I led {major_initiative}, resulting in {quantifiable_results}. My leadership philosophy centers on {leadership_approach}, which has consistently enabled teams to exceed performance targets.

{strategic_vision}

I am impressed by {company}''s position in {market_position} and your commitment to {company_values}. I believe my experience in {relevant_experience} positions me to make significant contributions to your continued growth and success.

{executive_capabilities}

I would appreciate the opportunity to discuss how my strategic vision and proven track record align with {company}''s objectives. Thank you for your consideration.

Sincerely,
{applicant_name}
{applicant_title}'
)
ON CONFLICT DO NOTHING;
""")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DELETE FROM cover_letter_templates")
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_username_key'), 'users', ['username'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('idx_users_username'), 'users', ['username'], unique=False)
    op.create_index(op.f('idx_users_email'), 'users', ['email'], unique=False)
    op.drop_index(op.f('ix_resumes_id'), table_name='resumes')
    op.create_index(op.f('idx_resumes_user_id'), 'resumes', ['user_id'], unique=False)
    op.drop_index(op.f('ix_resume_versions_version'), table_name='resume_versions')
    op.drop_index(op.f('ix_resume_versions_is_original'), table_name='resume_versions')
    op.drop_index(op.f('ix_resume_versions_id'), table_name='resume_versions')
    op.drop_index(op.f('ix_resume_versions_created_at'), table_name='resume_versions')
    op.create_index(op.f('idx_resume_versions_resume_id'), 'resume_versions', ['resume_id'], unique=False)
    op.create_index(op.f('idx_resume_versions_is_original'), 'resume_versions', ['is_original'], unique=False)
    op.create_index(op.f('idx_resume_versions_created_at'), 'resume_versions', ['created_at'], unique=False)
    op.alter_column('resume_versions', 'resume_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Parent resume - cascade delete versions',
               existing_nullable=False)
    op.create_table_comment(
        'cover_letters',
        'Master cover letter records for users. Similar to resumes, can have multiple versions.',
        existing_comment=None,
        schema=None
    )
    op.drop_index(op.f('ix_cover_letters_user_id'), table_name='cover_letters')
    op.drop_index(op.f('ix_cover_letters_is_default'), table_name='cover_letters')
    op.drop_index(op.f('ix_cover_letters_id'), table_name='cover_letters')
    op.create_index(op.f('idx_cover_letters_user_id'), 'cover_letters', ['user_id'], unique=False)
    op.create_index(op.f('idx_cover_letters_is_default'), 'cover_letters', ['is_default'], unique=False)
    op.create_index(op.f('idx_cover_letters_created_at'), 'cover_letters', ['created_at'], unique=False)
    op.alter_column('cover_letters', 'is_default',
               existing_type=sa.BOOLEAN(),
               comment="Whether this is the user's default cover letter",
               existing_nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('cover_letters', 'user_id',
               existing_type=sa.INTEGER(),
               comment='User who owns this cover letter - cascade delete on user deletion',
               existing_comment='User who owns this cover letter',
               existing_nullable=False)
    op.create_table_comment(
        'cover_letter_versions',
        'Version history for cover letters. Supports customization for applications.',
        existing_comment=None,
        schema=None
    )
    op.drop_index(op.f('ix_cover_letter_versions_version'), table_name='cover_letter_versions')
    op.drop_index(op.f('ix_cover_letter_versions_is_original'), table_name='cover_letter_versions')
    op.drop_index(op.f('ix_cover_letter_versions_id'), table_name='cover_letter_versions')
    op.drop_index(op.f('ix_cover_letter_versions_created_at'), table_name='cover_letter_versions')
    op.create_index(op.f('idx_cover_letter_versions_version'), 'cover_letter_versions', ['version'], unique=False)
    op.create_index(op.f('idx_cover_letter_versions_is_original'), 'cover_letter_versions', ['is_original'], unique=False)
    op.create_index(op.f('idx_cover_letter_versions_created_at'), 'cover_letter_versions', ['created_at'], unique=False)
    op.create_index(op.f('idx_cover_letter_versions_cover_letter_id'), 'cover_letter_versions', ['cover_letter_id'], unique=False)
    op.alter_column('cover_letter_versions', 'is_original',
               existing_type=sa.BOOLEAN(),
               comment='True for original/master versions, False for company-specific customizations',
               existing_nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('cover_letter_versions', 'job_description',
               existing_type=sa.TEXT(),
               comment='Job description used for customization (if this is a customized version)',
               existing_nullable=True)
    op.alter_column('cover_letter_versions', 'markdown_content',
               existing_type=sa.TEXT(),
               comment='The actual cover letter content in markdown format',
               existing_nullable=False)
    op.alter_column('cover_letter_versions', 'version',
               existing_type=sa.VARCHAR(length=50),
               comment='Version identifier (e.g., v1, v1.1, v2 - Company Name)',
               existing_nullable=False)
    op.alter_column('cover_letter_versions', 'cover_letter_id',
               existing_type=sa.INTEGER(),
               comment='Parent cover letter - cascade delete versions when cover letter deleted',
               existing_comment='Parent cover letter - cascade delete versions',
               existing_nullable=False)
    op.create_table_comment(
        'cover_letter_templates',
        'Template library for generating cover letters',
        existing_comment=None,
        schema=None
    )
    op.drop_index(op.f('ix_cover_letter_templates_name'), table_name='cover_letter_templates')
    op.drop_index(op.f('ix_cover_letter_templates_id'), table_name='cover_letter_templates')
    op.create_index(op.f('idx_cover_letter_templates_name'), 'cover_letter_templates', ['name'], unique=False)
    op.create_index(op.f('idx_cover_letter_templates_created_at'), 'cover_letter_templates', ['created_at'], unique=False)
    op.alter_column('cover_letter_templates', 'content_template',
               existing_type=sa.TEXT(),
               comment='Template content with placeholders for personalization',
               existing_comment='Template content with placeholders like {position}, {company}, etc.',
               existing_nullable=False)
    op.alter_column('cover_letter_templates', 'description',
               existing_type=sa.TEXT(),
               comment='Description of template purpose and use case',
               existing_nullable=True)
    op.alter_column('cover_letter_templates', 'name',
               existing_type=sa.VARCHAR(length=255),
               comment='Template name for identification',
               existing_nullable=False)
    op.add_column('applications', sa.Column('cover_letter_customized_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='Timestamp for when the cover letter was customized for this application'))
    op.drop_index(op.f('ix_applications_status'), table_name='applications')
    op.drop_index(op.f('ix_applications_id'), table_name='applications')
    op.drop_index(op.f('ix_applications_cover_letter_version_id'), table_name='applications')
    op.drop_index(op.f('ix_applications_cover_letter_id'), table_name='applications')
    op.drop_index(op.f('ix_applications_company'), table_name='applications')
    op.drop_index(op.f('ix_applications_applied_date'), table_name='applications')
    op.create_index(op.f('idx_applications_user_id'), 'applications', ['user_id'], unique=False)
    op.create_index(op.f('idx_applications_status'), 'applications', ['status'], unique=False)
    op.create_index(op.f('idx_applications_resume_version_id'), 'applications', ['resume_version_id'], unique=False)
    op.create_index(op.f('idx_applications_resume_id'), 'applications', ['resume_id'], unique=False)
    op.create_index(op.f('idx_applications_customized_resume_version_id'), 'applications', ['customized_resume_version_id'], unique=False)
    op.create_index(op.f('idx_applications_cover_letter_version_id'), 'applications', ['cover_letter_version_id'], unique=False)
    op.create_index(op.f('idx_applications_company'), 'applications', ['company'], unique=False)
    op.create_index(op.f('idx_applications_applied_date'), 'applications', ['applied_date'], unique=False)
    op.alter_column('applications', 'additional_instructions',
               existing_type=sa.TEXT(),
               comment='Additional instructions used for resume customization',
               existing_nullable=True)
    op.alter_column('applications', 'customized_cover_letter_version_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Customized cover letter version for this application - deleted with application',
               existing_nullable=True)
    op.alter_column('applications', 'cover_letter_version_id',
               existing_type=sa.INTEGER(),
               comment='Specific version of cover letter used for this application - preserved on deletion (SET NULL)',
               existing_comment='Specific version of cover letter used for this application - protected from deletion',
               existing_nullable=True)
    op.alter_column('applications', 'cover_letter_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Cover letter master record - preserved on deletion (SET NULL)',
               existing_nullable=True)
    op.alter_column('applications', 'customized_resume_version_id',
               existing_type=sa.INTEGER(),
               comment='Customized version for this application - deleted with application (CASCADE)',
               existing_comment='Customized version - deleted with application',
               existing_nullable=True)
    op.alter_column('applications', 'resume_version_id',
               existing_type=sa.INTEGER(),
               comment='Original resume version - protected from deletion (RESTRICT)',
               existing_comment='Original resume version - protected from deletion',
               existing_nullable=False)
    op.alter_column('applications', 'resume_id',
               existing_type=sa.INTEGER(),
               comment='Original resume - protected from deletion (RESTRICT)',
               existing_comment='Original resume - protected from deletion',
               existing_nullable=False)
    op.create_table('schema_version',
    sa.Column('version', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('applied_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('version', name=op.f('schema_version_pkey'))
    )
    # ### end Alembic commands ###
